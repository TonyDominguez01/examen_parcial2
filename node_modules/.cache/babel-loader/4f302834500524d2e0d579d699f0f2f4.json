{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tony Dominguez\\\\Documents\\\\Tony\\\\Universidad\\\\CuatriDiez\\\\AplicacionesWebProgresivas\\\\examen2parcial\\\\src\\\\routes\\\\LoginRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport LoginScreen from '../pages/LoginScreen';\nimport AppRouter from './AppRouter';\nimport PrivateRouter from './PrivateRouter';\nimport PublicRouter from './PublicRouter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginRouter = () => {\n  _s();\n\n  //Recuperamos el context mediante el hook useContext para asi poder saber si el usuario esta autenticado o no\n  const {\n    log\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(PublicRouter, {\n        path: \"/login\",\n        auth: log,\n        component: LoginScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRouter, {\n        path: \"/\",\n        auth: log,\n        component: AppRouter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginRouter, \"HjnIoXtN5hthHjHMOfHK53+PXdY=\");\n\n_c = LoginRouter;\nexport default LoginRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRouter\");","map":{"version":3,"sources":["C:/Users/Tony Dominguez/Documents/Tony/Universidad/CuatriDiez/AplicacionesWebProgresivas/examen2parcial/src/routes/LoginRouter.jsx"],"names":["React","useContext","BrowserRouter","Router","Switch","AuthContext","LoginScreen","AppRouter","PrivateRouter","PublicRouter","LoginRouter","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUV,UAAU,CAACI,WAAD,CAA1B;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAEM,GAAlC;AAAuC,QAAA,SAAS,EAAEL;AAAlD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAC,GAApB;AAAwB,QAAA,IAAI,EAAEK,GAA9B;AAAmC,QAAA,SAAS,EAAEJ;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAZD;;GAAMG,W;;KAAAA,W;AAcN,eAAeA,WAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport LoginScreen from '../pages/LoginScreen'\r\nimport AppRouter from './AppRouter'\r\nimport PrivateRouter from './PrivateRouter'\r\nimport PublicRouter from './PublicRouter'\r\n\r\n\r\nconst LoginRouter = () => {\r\n    //Recuperamos el context mediante el hook useContext para asi poder saber si el usuario esta autenticado o no\r\n    const { log } = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRouter path=\"/login\" auth={log} component={LoginScreen} />\r\n                <PrivateRouter path=\"/\" auth={log} component={AppRouter} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default LoginRouter\r\n"]},"metadata":{},"sourceType":"module"}